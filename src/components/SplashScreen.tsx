import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Smartphone, Shield, Users, Phone, UserPlus, Settings } from "lucide-react";
import heroImage from "@/assets/nagar-rakshak-hero.jpg";

// 1. Update the interface to accept the new props
interface SplashScreenProps {
  onNavigate: (screen: string) => void;
  language: 'en' | 'hi' | 'bn' | 'te';
  setLanguage: (language: 'en' | 'hi' | 'bn' | 'te') => void;
}

const translations = {
    en: {
        title: "Nagar Rakshak",
        tagline: "Your Voice, Your City's Future",
        citizenPowered: "Citizen Powered",
        mobileFirst: "Mobile First",
        loginWithPhone: "Login with Phone",
        loginDescription: "Quick OTP verification",
        signup: "New Citizen Signup",
        signupDescription: "Join the movement",
        adminPortal: "Admin Portal",
        adminDescription: "Government officials",
        footer: "Empowering citizens to build better communities",
        madeFor: "Made for Digital India",
    },
    hi: {
        title: "‡§®‡§ó‡§∞ ‡§∞‡§ï‡•ç‡§∑‡§ï",
        tagline: "‡§Ü‡§™‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú‡§º, ‡§Ü‡§™‡§ï‡•á ‡§∂‡§π‡§∞ ‡§ï‡§æ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø",
        citizenPowered: "‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§",
        mobileFirst: "‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§´‡§∞‡•ç‡§∏‡•ç‡§ü",
        loginWithPhone: "‡§´‡§º‡•ã‡§® ‡§∏‡•á ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç",
        loginDescription: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ OTP ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§®",
        signup: "‡§®‡§è ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§ï‡§æ ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£",
        signupDescription: "‡§Ü‡§Ç‡§¶‡•ã‡§≤‡§® ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç",
        adminPortal: "‡§è‡§°‡§Æ‡§ø‡§® ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤",
        adminDescription: "‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ö‡§ß‡§ø‡§ï‡§æ‡§∞‡•Ä",
        footer: "‡§¨‡•á‡§π‡§§‡§∞ ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§®‡§æ",
        madeFor: "‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
    },
    bn: {
        title: "‡¶®‡¶ó‡¶∞ ‡¶∞‡¶ï‡ßç‡¶∑‡¶ï",
        tagline: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ü‡¶ì‡¶Ø‡¶º‡¶æ‡¶ú, ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∂‡¶π‡¶∞‡ßá‡¶∞ ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡ßé",
        citizenPowered: "‡¶®‡¶æ‡¶ó‡¶∞‡¶ø‡¶ï ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶ö‡¶æ‡¶≤‡¶ø‡¶§",
        mobileFirst: "‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶´‡¶æ‡¶∞‡ßç‡¶∏‡ßç‡¶ü",
        loginWithPhone: "‡¶´‡ßã‡¶® ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®",
        loginDescription: "‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ OTP ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á",
        signup: "‡¶®‡¶§‡ßÅ‡¶® ‡¶®‡¶æ‡¶ó‡¶∞‡¶ø‡¶ï ‡¶∏‡¶æ‡¶á‡¶®‡¶Ü‡¶™",
        signupDescription: "‡¶Ü‡¶®‡ßç‡¶¶‡ßã‡¶≤‡¶®‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶®",
        adminPortal: "‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡¶æ‡¶≤",
        adminDescription: "‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶ï‡¶∞‡ßç‡¶Æ‡¶ï‡¶∞‡ßç‡¶§‡¶æ‡¶∞‡¶æ",
        footer: "‡¶â‡¶®‡ßç‡¶®‡¶§ ‡¶∏‡¶Æ‡¶æ‡¶ú ‡¶ó‡¶°‡¶º‡¶§‡ßá ‡¶®‡¶æ‡¶ó‡¶∞‡¶ø‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ‡¶Ø‡¶º‡¶®",
        madeFor: "‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶á‡¶®‡ßç‡¶°‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶§‡ßà‡¶∞‡¶ø",
    },
    te: {
        title: "‡∞®‡∞ó‡∞∞‡±ç ‡∞∞‡∞ï‡±ç‡∞∑‡∞ï‡±ç",
        tagline: "‡∞Æ‡±Ä ‡∞∏‡±ç‡∞µ‡∞∞‡∞Ç, ‡∞Æ‡±Ä ‡∞®‡∞ó‡∞∞‡∞Ç ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞≠‡∞µ‡∞ø‡∞∑‡±ç‡∞Ø‡∞§‡±ç‡∞§‡±Å",
        citizenPowered: "‡∞™‡±å‡∞∞ ‡∞∂‡∞ï‡±ç‡∞§‡∞ø",
        mobileFirst: "‡∞Æ‡±ä‡∞¨‡±à‡∞≤‡±ç ‡∞´‡∞∏‡±ç‡∞ü‡±ç",
        loginWithPhone: "‡∞´‡±ã‡∞®‡±ç‚Äå‡∞§‡±ã ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞Ö‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø",
        loginDescription: "‡∞§‡±ç‡∞µ‡∞∞‡∞ø‡∞§ OTP ‡∞ß‡±É‡∞µ‡±Ä‡∞ï‡∞∞‡∞£",
        signup: "‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞™‡±å‡∞∞‡∞∏‡∞§‡±ç‡∞µ‡∞Ç ‡∞∏‡±à‡∞®‡±ç‡∞Ö‡∞™‡±ç",
        signupDescription: "‡∞â‡∞¶‡±ç‡∞Ø‡∞Æ‡∞Ç‡∞≤‡±ã ‡∞ö‡±á‡∞∞‡∞Ç‡∞°‡∞ø",
        adminPortal: "‡∞Ö‡∞°‡±ç‡∞Æ‡∞ø‡∞®‡±ç ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡∞≤‡±ç",
        adminDescription: "‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡±Å‡∞≤‡±Å",
        footer: "‡∞Æ‡±Ü‡∞∞‡±Å‡∞ó‡±à‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ú‡∞æ‡∞≤‡∞®‡±Å ‡∞®‡∞ø‡∞∞‡±ç‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞™‡±å‡∞∞‡±Å‡∞≤‡∞®‡±Å ‡∞∂‡∞ï‡±ç‡∞§‡∞ø‡∞µ‡∞Ç‡∞§‡∞Ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç",
        madeFor: "‡∞°‡∞ø‡∞ú‡∞ø‡∞ü‡∞≤‡±ç ‡∞á‡∞Ç‡∞°‡∞ø‡∞Ø‡∞æ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞§‡∞Ø‡∞æ‡∞∞‡±Å ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø",
    },
};

const SplashScreen = ({ onNavigate, language, setLanguage }: SplashScreenProps) => {
  // 2. Remove the local state - we now use the props from Index.tsx
  // const [language, setLanguage] = useState<'en' | 'hi' | 'bn' | 'te'>("en");

  return (
    <div className="min-h-screen bg-gradient-to-br from-civic-orange-light via-background to-civic-green-light">
      {/* Hero Section */}
      <div className="relative">
        <div className="absolute inset-0 bg-gradient-to-b from-transparent to-background/90" />
        <img 
          src={heroImage} 
          alt="Nagar Rakshak - Digital Civic Engagement" 
          className="w-full h-64 md:h-80 object-cover"
        />
        
        <div className="absolute top-4 right-4 z-10">
          <Select
            defaultValue={language}
            onValueChange={(value: "en" | "hi" | "bn" | "te") => setLanguage(value)}
          >
            <SelectTrigger className="w-32 bg-white/90 border-0">
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="en">English</SelectItem>
              <SelectItem value="hi">‡§π‡§ø‡§Ç‡§¶‡•Ä</SelectItem>
              <SelectItem value="bn">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ</SelectItem>
              <SelectItem value="te">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>

      {/* Main Content */}
      <div className="px-6 py-8 max-w-md mx-auto">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center mb-4">
            <div className="bg-gradient-to-r from-civic-saffron to-civic-green p-4 rounded-full shadow-civic">
              <Shield className="h-12 w-12 text-white" />
            </div>
          </div>
          
          <h1 className="text-4xl font-bold bg-gradient-to-r from-civic-saffron to-civic-green bg-clip-text text-transparent mb-2">
            {translations[language].title}
          </h1>
          
          <p className="text-muted-foreground text-lg leading-relaxed mb-6">
            {translations[language].tagline}
          </p>

          <div className="flex flex-wrap justify-center gap-2 mb-6">
            <Badge variant="outline" className="border-civic-saffron text-civic-saffron">
              <Users className="h-3 w-3 mr-1" />
              {translations[language].citizenPowered}
            </Badge>
            <Badge variant="outline" className="border-civic-green text-civic-green">
              <Smartphone className="h-3 w-3 mr-1" />
              {translations[language].mobileFirst}
            </Badge>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="space-y-4 mb-8">
          <Card className="border-2 border-civic-saffron/20 hover:border-civic-saffron/40 transition-colors cursor-pointer"
                onClick={() => onNavigate('login')}>
            <CardContent className="p-6">
              <div className="flex items-center space-x-4">
                <div className="bg-civic-saffron/10 p-3 rounded-full">
                  <Phone className="h-6 w-6 text-civic-saffron" />
                </div>
                <div className="flex-1">
                  <h3 className="font-semibold text-lg">{translations[language].loginWithPhone}</h3>
                  <p className="text-sm text-muted-foreground">{translations[language].loginDescription}</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="border-2 border-civic-green/20 hover:border-civic-green/40 transition-colors cursor-pointer"
                onClick={() => onNavigate('signup')}>
            <CardContent className="p-6">
              <div className="flex items-center space-x-4">
                <div className="bg-civic-green/10 p-3 rounded-full">
                  <UserPlus className="h-6 w-6 text-civic-green" />
                </div>
                <div className="flex-1">
                  <h3 className="font-semibold text-lg">{translations[language].signup}</h3>
                  <p className="text-sm text-muted-foreground">{translations[language].signupDescription}</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="border-2 border-civic-blue/20 hover:border-civic-blue/40 transition-colors cursor-pointer"
                onClick={() => onNavigate('admin')}>
            <CardContent className="p-6">
              <div className="flex items-center space-x-4">
                <div className="bg-civic-blue/10 p-3 rounded-full">
                  <Settings className="h-6 w-6 text-civic-blue" />
                </div>
                <div className="flex-1">
                  <h3 className="font-semibold text-lg">{translations[language].adminPortal}</h3>
                  <p className="text-sm text-muted-foreground">{translations[language].adminDescription}</p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Footer */}
        <div className="text-center text-sm text-muted-foreground">
          <p>{translations[language].footer}</p>
          <p className="mt-2 text-xs">üáÆüá≥ {translations[language].madeFor}</p>
        </div>
      </div>
    </div>
  )
};

export default SplashScreen;